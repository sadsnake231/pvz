syntax = "proto3";

package transport.grpc;
option go_package = "gitlab.ozon.dev/sadsnake231/homework/internal/transport/grpc/gen/order";

service OrderHandler {
  // Orders
  rpc AcceptOrder(AcceptOrderRequest) returns (AcceptOrderResponse);
  rpc ReturnOrder(ReturnOrderRequest) returns (ReturnOrderResponse);
  
  // Actions
  rpc IssueRefundOrders(IssueRefundRequest) returns (IssueRefundResponse);
  
  // Reports
  rpc GetUserOrders(GetUserOrdersRequest) returns (GetUserOrdersResponse);
  rpc GetRefundedOrders(GetRefundedOrdersRequest) returns (GetRefundedOrdersResponse);
  rpc GetOrderHistory(GetOrderHistoryRequest) returns (GetOrderHistoryResponse);
  rpc GetUserActiveOrders(GetUserActiveOrdersRequest) returns (GetUserActiveOrdersResponse);
  rpc GetAllActiveOrders(GetAllActiveOrdersRequest) returns (GetAllActiveOrdersResponse);
  rpc GetOrderHistoryV2(GetOrderHistoryV2Request) returns (GetOrderHistoryV2Response);
}

message AcceptOrderRequest {
  string id = 1;
  string recipient_id = 2;
  string expiry = 3;
  double base_price = 4;
  double weight = 5;
  string packaging = 6;
}

message AcceptOrderResponse {
  string message = 1;
}

message ReturnOrderRequest {
  string id = 1;
}

message ReturnOrderResponse {
  string message = 1;
}

message IssueRefundRequest {
  string command = 1;
  string user_id = 2;
  repeated string order_ids = 3;
}

message IssueRefundResponse {
  repeated string processed_order_ids = 1;
  repeated string failed_order_ids = 2;
  string error = 3;
}

message GetUserOrdersRequest {
  string user_id = 1;
  int32 limit = 2;
  string cursor = 3;
  string status = 4;
}

message GetUserOrdersResponse {
  repeated Order orders = 1;
  string next_cursor = 2;
}

message GetRefundedOrdersRequest {
  int32 limit = 1;
  string cursor = 2;
}

message GetRefundedOrdersResponse {
  repeated Order orders = 1;
  string next_cursor = 2;
}

message GetOrderHistoryRequest {
  int32 limit = 1;
  string last_updated_cursor = 2;
  int32 id_cursor = 3;
}

message GetOrderHistoryResponse {
  repeated Order orders = 1;
  string next_cursor = 2;
}

message GetUserActiveOrdersRequest {
  string user_id = 1;
}

message GetUserActiveOrdersResponse {
  repeated Order orders = 1;
}

message GetAllActiveOrdersRequest {
  string cursor = 1;
}

message GetAllActiveOrdersResponse {
  repeated Order orders = 1;
}

message GetOrderHistoryV2Request {
    string cursor = 1;
}

message GetOrderHistoryV2Response {
  repeated Order orders = 1;
}

message Order {
  string id = 1;
  string recipient_id = 2;
  string expiry = 3;
  double base_price = 4;
  double weight = 5;
  string packaging = 6;
}